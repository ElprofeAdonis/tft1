// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderState {
  NEW
  PROCCESSING
  SHIPPED
  CANCELED
}

enum ShippingState {
  IN_TRANSIT
  DELIVERED
  UNKNOW
}

model User {
  id        Int       @id @default(autoincrement())
  username  String
  email     String
  password  String
  createdAt DateTime  @default(now())
  contacts  Contact[]
}

model Review {
  id        Int      @id @default(autoincrement())
  comment   String
  rating    Int      @default(0)
  productId Int
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  size        String
  createdAt   DateTime    @default(now())
  reviews     Review[]
  orderItems  OrderItem[]
}

model Order {
  id           Int         @id @default(autoincrement())
  code         String
  state        OrderState  @default(NEW)
  total        Float
  items        OrderItem[]
  contactId    Int
  contact      Contact     @relation(fields: [contactId], references: [id])
  paymentState String
  updatedAt    DateTime    @default(now())
  createdAt    DateTime    @default(now())
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  Order     Order?   @relation(fields: [orderId], references: [id])
  orderId   Int?
  productId Int
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
}

model Contact {
  id          Int      @id @default(autoincrement())
  email       String
  phoneCode   String
  phoneNumber String
  address     String   @db.Text()
  postalCode  String
  references  String?  @db.Text()
  userId      Int?
  user        User?    @relation(fields: [userId], references: [id])
  orders      Order[]
  updatedAt   DateTime @default(now())
  createdAt   DateTime @default(now())
}

model Shipping {
  id          Int               @id @default(autoincrement())
  orderId     Int
  orderCode   String
  trackCode   String
  company     String
  history     ShippingHistory[]
  deliverDate DateTime
  updatedAt   DateTime          @default(now())
  createdAt   DateTime          @default(now())
}

model ShippingHistory {
  id         Int      @id @default(autoincrement())
  shippingId Int
  comment    String?  @db.Text()
  updatedAt  DateTime @default(now())
  createdAt  DateTime @default(now())
  Shipping   Shipping @relation(fields: [shippingId], references: [id])
}
